7913EB96	Many applications of Wireless Sensor Networks (WSNs) require accurate time synchronization for data consistency and coordination. While the existing protocols for time synchronization provide sufficient accuracy, they consume high energy and poorly synchronize the distant nodes. We propose a Recursive Time Synchronization Protocol (RTSP) which provides global clock synchronization in an accurate and energy-efficient way. It achieves better performance by using a novel blend of techniques such as the MAC-layer time-stamping based on Start of Frame Delimiter (SFD) byte, fewer broadcasts by the reference node, compensation of the propagation delay and adjustment of the timestamps at each hop, estimation of the relative skew and offset using least square linear regression on two data points (2LR), adaptive re-synchronization interval, aggregation of the synchronization requests and energy-awareness. We also analyze the sources of errors and efficiency. Simulation results show an average accuracy of 0.3μs in a large multi-hop network while using only 1/5th of the energy consumed by FTSP in the long run, i.e., the RTSP outperforms all other protocols of its class including RBS, TPSN and FTSP.
76684966	The International Atomic Time TAI is a physically realized time scale which is ultimately used for comparisons between observations and dynamical theories. Its definition should tell unambiguously what an ideal TAI should be. For terrestrial applications, TAI has been defined as a geocentric coordinate time. In Solar System Dynamics, a barycentric coordinate time is needed. In general, it is not possible to convert a coordinate time into another coordinate time. But a specific clock synchronized on TAI in the terrestrial system can be considered as reading a ‘modified’, proper time [TAI]i, which can be converted into a barycentric coordinate time. In this conversion appears a small location dependent term. By this process all the clocks of the TAI system give an unique barycentric time with the same metrological properties as TAI.
7F980C5B	A blind method for jointly estimating and correcting time, carrier frequency and sampling clock frequency synchronization in OFDM based systems is proposed. The algorithm is particularlly suitable for low-cost terminal implementations, since it provides a great efficiency in terms of hardware complexity. Its performance has been tested on a real system, taking 3GPP-LTE as target technology and FPGAs as hardware platform. Results show its good performance while keeping computational complexity unincreased.
7AC21292	This paper addresses the implementation of global time in transputer systems by software synchronization of local processor timers. After an introduction on the synchronization problem, SYNC_WAVE, a synchronization algorithm for multicomputer architectures, is briefly described. The rest of the paper gives details of an existing implementation of SYNC_WAVE for transputer-based systems. Most of the devised code is presented and commented on, showing the methods used to improve synchronization accuracy and to read the global clock from within a user process. The performance results obtained are shown, and the usefulness and portability of the proposed code are discussed.
7D58E42C	A probabilistic method is proposed for reading remote clocks in distributed systems subject to unbounded random communication delays. The method can achieve clock synchronization precisions superior to those attainable by previously published clock synchronization algorithms. Its use is illustrated by presenting a time service which maintains externally (and hence, internally) synchronized clocks in the presence of process, communication and clock failures.
816D7F63	Accurately synchronized clocks are crucial for many applications in sensor networks. Existing time synchronization algorithms provide on average good synchronization between arbitrary nodes, however, as we show in this paper, close-by nodes in a network may be synchronized poorly. We propose the Gradient Time Synchronization Protocol (GTSP) which is designed to provide accurately synchronized clocks between neighbors. GTSP works in a completely decentralized fashion: Every node periodically broadcasts its time information. Synchronization messages received from direct neighbors are used to calibrate the logical clock. The algorithm requires neither a tree topology nor a reference node, which makes it robust against link and node failures. The protocol is implemented on the Mica2 platform using TinyOS. We present an evaluation of GTSP on a 20-node testbed setup and simulations on larger network topologies.
7F1F639A	We study the problem of clock synchronization in highly dynamic networks, where communication links can appear or disappear at any time. The nodes in the network are equipped with hardware clocks, but the rate of the hardware clocks can vary arbitrarily within specific bounds, and the estimates that nodes can obtain about the clock values of other nodes are inherently inaccurate. Our goal in this setting is to output a logical clock at each node, such that the logical clocks of any two nodes are not too far apart, and nodes that remain close to each other in the network for a long time are better synchronized than distant nodes. This property is called gradient clock synchronization.Gradient clock synchronization has been widely studied in the static setting. We show that the bounds for the static case also apply to our highly dynamic setting: if two nodes remain at distance d from each other for sufficiently long, it is possible to synchronize their clocks to within O(d log(D/d)), where D is the diameter of the network. This is known to be optimal for static networks, and since a static network is a special case of a dynamic network, it is optimal for dynamic networks as well. Furthermore, we show that our algorithm has optimal stabilization time: when a path of length d appears between two nodes, the time required until the skew between the two nodes is reduced to O(d log(D/d)) is O(D), which we prove is optimal.
76E0C500	We describe a new fault-tolerant algorithm for solving a variant of Lamport's clock synchronization problem. The algorithm is designed for a system of distributed processes that communicate by sending messages. Each process has its own read-only physical clock whose drift rate from real time is very small. By adding a value to its physical clock time, the process obtaines its local time. The algorithm solves the problem of maintaining closely synchronized local times, assuming that processes' local times are closely synchronized initially. The algorithm is able to tolerate the failure of just under one-third of the participating processes. It maintains synchronization to within a small constant, whose magnitude depends upon the rate of clock drift, the message delivery time and its uncertainty, and the initial closeness of synchronization. We also give a characterization of how far the clocks drift from real time. Reintegration of a repaired process can be accomplished using a slight modification of the basic alborithm. A similar style algorithm can also be used to achieve synchronization initially.
79826E19	We present a novel clock synchronization algorithm and prove tight upper and lower bounds on the worst-case clock skew that may occur between any two participants in any given distributed system. More importantly, the worst-case clock skew between neighboring nodes is (asymptotically) at most a factor of two larger than the best possible bound. While previous results solely focused on the dependency of the skew bounds on the network diameter, we prove that our techniques are optimal also with respect to the maximum clock drift, the uncertainty in message delays, and the imposed bounds on the clock rates. The presented results all hold in a general model where both the clock drifts and the message delays may vary arbitrarily within pre-specified bounds. Furthermore, our algorithm exhibits a number of other highly desirable properties. First, the algorithm ensures that the clock values remain in an affine linear envelope of real time. A better worst-case bound on the accuracy with respect to real time cannot be achieved in the absence of an external timer. Second, the algorithm minimizes the number and size of messages that need to be exchanged in a given time period. Moreover, only a small number of bits must be stored locally for each neighbor. Finally, our algorithm can easily be adapted for a variety of other prominent synchronization models. 
80081FB9	Large propagation delay and node movement are considered to be two significant attributes that differentiate an underwater wireless sensor network (UWSN) from a ground wireless sensor network (WSN). Considering the effects of both propagation delay and movement, we propose a time synchronization algorithm suitable for a UWSN. An underwater node can move out of and into another node's range frequently. With the proposed algorithm, no time synchronization is necessary if the time stamps of the received data packets are within the tolerance. In this fashion, the network underwater does not need to perform global time synchronizations periodically, which reduces the time used to synchronize clocks among sensor nodes. The simulation results show the time cost for synchronization is linear to the data packets exchanged.
5DDE6ADB	Clock synchronization is a crucial service in many distributed systems, including wireless ad-hoc networks. This paper studies external clock synchronization, in which nodes should bring their clocks close to the value of some external reference time, which is provided in the system by one or more source clocks.Reference broadcast synchronization (RBS) is a known approach that exploits the broadcast nature of wireless networks for a single hop. However, when networks are large in physical extent, additional mechanisms must be employed.Using multi-hop algorithms that re-broadcast time information to short distances reduces the energy consumed for clock synchronization. The reason is that energy costs grow more than linearly with the broadcast distance. On the other hand, the quality of the clock synchronization, as measured in the closeness of the clocks, deteriorates as the number of hops increases.This paper shows how to balance these two contradictory goals, achieving optimal clock synchronization while adhering to an energy budget at each node. In particular, a distributed algorithm is presented that uses multi-hop broadcasting over a shallow infrastructure to synchronize the clocks. The closeness of clock synchronization achieved by the algorithm is proved to be optimal for the given energy constraints.
76367B21	A number of time synchronization protocols for wireless sensor networks (WSNs) have been recently proposed aiming at maximizing the accuracy and minimizing the power efficiency. This paper proposes novel clock skew estimators for the protocols based on two-way timing message exchanges to achieve long term reliability of synchronization. The proposed clock synchronization mechanism is far more power efficient than the conventional ones by significantly increasing the re-synchronization period. Moreover, it can be applied to the conventional protocols without any additional overhead. In fact, the proposed estimators assume simple steps and low complexity, a feature which is strongly demanding for WSNs consisting of cheap and small nodes
7534C71C	We describe hardware and software schemes for achieving precise clock synchronization on SP2 parallel system nodes. The SP2 multistage interconnection network has an unusual hardware feature, a set of distributed counters that the processor nodes may utilize for synchronizing their time–of–day clocks. We describe an algorithm for synchronizing the counters to within less than 200 nanoseconds of each other in a network of up to 512 processor nodes. This is 4–5 orders of magnitude better than what can be achieved by existing software schemes. We also describe experimental system software, called, for synchronizing the node clocks to the Internet time of day, utilizing the synchronous counters in the SP2 network.synchronizes the node clocks typically within 5 μs of each other, which is up to 2–3 orders of magnitude better than could be achieved by previous methods on the SP2 system. Synchronized clocks are useful in parallel and distributed environments, for example for performance measurement, tuning, tracing, debugging, gang scheduling of parallel processes, and timestamping of transactions. We also measure the performance of a widely used time synchronization utility, the Network Time Protocol, using the synchronous counters of the SP2 interconnection network.
7DD1F597	A general protocol for atomic broadcast in networks is presented. The protocol tolerates loss, duplication, reordering, delay of messages, and network partitioning in an arbitrary network of fail-stop sites (i.e. no Byzantine site behavior is tolerated). The protocol is based on majority-concensus decisions to commit on unique ordering of received broadcast messages. Under normal operating conditions, the protocol requires three phases to complete and approximately 4N/V messages where N is the number of sites. This overhead is distributed among the messages of which the delivery decision is made and the heavier the broadcast message traffic, the lower the overhead per broadcast message becomes. Under abnormal operating conditions, a decentralized termination protocol (also presented) is invoked. A performance analysis of this protocol is presented, showing that this protocol commits with high probability under realistic operating conditions without invoking termination protocol if N is sufficiently large. The protocol retains its efficiency in wide-area networks where broadcast communication media are unavailable.
80C888C7	Time-based localization approaches attract a lot of interest due to their high accuracy and potentially low cost for wireless sensor networks (WSNs). However, time-based localization is tightly coupled with clock synchronization. Thus, the reliability of timestamps in time-based localization becomes an important yet challenging task to deal with. In this paper, we propose robust time-based localization strategies to locate a target node with the help of anchors (nodes with known positions) in asynchronous networks. Two kinds of asynchronous networks are considered: one only with clock offsets, labeled quasi-synchronous networks, whereas the other with not only clock offsets but also clock skews, labeled fully asynchronous networks. A novel ranging protocol is developed for both networks, namely asymmetric trip ranging (ATR), to reduce the communication load and explore the broadcast property of WSNs. Regardless of the reliability of the timestamp report from the target node, closed-form least-squares (LS) estimators are derived to accurately estimate the target node position. As a result, we counter the uncertainties caused by the target node by ignoring the timestamps from this node. Furthermore, in order to simplify the estimator in fully asynchronous networks, localization and synchronization are decoupled. A simple yet efficient method is proposed to first Calibrate the Clock Skews of the anchors, and then Estimate the Node Position (CCS-ENP). Finally, Cramér-Rao bounds (CRBs) and simulation results corroborate the efficiency of our localization schemes.
7CF95A36	This letter proposes an energy-efficient clock synchronization scheme for Wireless Sensor Networks (WSNs) based on a novel time synchronization approach. Within the proposed synchronization approach, a subset of sensor nodes are synchronized by overhearing the timing message exchanges of a pair of sensor nodes. Therefore, a group of sensor nodes can be synchronized without sending any extra messages. This paper brings two main contributions: 1. Development of a novel synchronization approach which can be partially or fully applied for implementation of new synchronization protocols and for improving the performance of existing time synchronization protocols. 2. Design of a time synchronization scheme which significantly reduces the overall network-wide energy consumption without incurring any loss of synchronization accuracy compared to other well-known schemes.
7FD9D0A2	The cost of synchronizing a multicomputer increases with system size. For large multicomputers, the time and resources spent to enable each node to estimate the clock value of every other node in the system can be prohibitive. We show how to reduce the cost of synchronization by assigning each node to one or more groups, then having each node estimate the clock values of only those nodes with which it shares a group. Since each node estimates the clock value of only a subset of the nodes, the cost of synchronization can be significantly reduced. We also provide a method for computing the maximum skew between any two nodes in the multicomputer, and a method for computing the maximum time between synchronizations. We also show how the fault tolerance of the synchronization algorithm may be determined.
7849ABA5	Recent advances in micro-electromechanical (MEMS) technology have led to the development of small, low-cost, and low-power sensors. Wireless sensor networks (WSNs) are large-scale networks of such sensors, dedicated to observing and monitoring various aspects of the physical world. In such networks, data from each sensor is agglomerated using data fusion to form a single meaningful result, which makes time synchronization between sensors highly desirable. This paper surveys and evaluates existing clock synchronization protocols based on a palette of factors like precision, accuracy, cost, and complexity. The design considerations presented here can help developers either in choosing an existing synchronization protocol or in defining a new protocol that is best suited to the specific needs of a sensor-network application. Finally, the survey provides a valuable framework by which designers can compare new and existing synchronization protocols.
7D466127	Recently, a few efficient timing synchronization protocols for wireless sensor networks (WSNs) have been proposed with the goal of maximizing the accuracy and minimizing the power utilization. This paper proposes novel clock skew estimators assuming different delay environments to achieve energy-efficient network-wide synchronization for WSNs. The proposed clock skew correction mechanism significantly increases the re-synchronization period, which is a critical factor in reducing the overall power consumption. The proposed synchronization scheme can be applied to the conventional protocols without additional overheads. Moreover, this paper derives the Cramer-Rao lower bounds and the maximum likelihood estimators under different delay models and assumptions. These analytical metrics serves as good benchmarks for the thus far reported experimental results
7D833076	Since wireless ad-hoc networks use shared communication medium, accesses to the medium must be coordinated to avoid packet collisions. Transmission scheduling algorithms allocate time slots to the nodes of a network such that if the nodes transmit only during the allocated time slots, no collision occurs. For real-time applications, by ensuring deterministic channel access, transmission scheduling algorithms have the added significance of making guarantees on transmission latency possible. In this paper we present a distributed transmission scheduling algorithm for hexagonal wireless ad-hoc networks with a particular focus on Wireless Sensor Networks. Afforded by the techniques of ad-hoc networks topology control, hexagonal meshes enable trivial addressing and routing protocols. Our transmission scheduling algorithm constructs network-wide conflict-free packet transmission schedule for hexagonal networks, where the overhead of schedule construction in terms of message exchanges is zero above and beyond that for topology control and other network control related functions. Furthermore, the schedule is optimal in the sense that the bottleneck node does not idle. We also present an implicit clock synchronization algorithm to facilitate scheduling. We derive the real time capacity of our scheduling algorithm. We present evaluations of our scheduling algorithm in the presence of topological irregularities using simulation.
80C59B4C	Over the last years, large-scale decentralized computer networks such as peer-to-peer and mobile ad hoc networks have become increasingly prevalent. The topologies of many of these networks are often highly dynamic. This is especially true for ad hoc networks formed by mobile wireless devices.In this paper, we study the fundamental problem of clock synchronization in dynamic networks. We show that there is an inherent trade-off between the skew S guaranteed along sufficiently old links and the time needed to guarantee a small skew along new links: for any sufficiently large initial skew on a new link, there are executions in which the time required to reduce the skew on the link to O(S) is at least Ω(n/S).We show that this bound is tight for moderately small values of S. Assuming a fixed set of n nodes, an arbitrary pattern of edge insertions and removals, and a weak dynamic connectivity requirement, we present an algorithm that always maintains a skew of O(n) between any two nodes in the network. For a parameter S=Ω(ρn−−√), where ρ is the maximum hardware clock drift, it is further guaranteed that if a communication link between two nodes u,v persists in the network for Θ(n/S) time, the clock skew between u and v is reduced to no more than O(S).
7FC275BB	We introduce the distributed gradientclock synchronization problem. As in traditional distributed clock synchronization, we consider a network of nodes equipped with hardware clocks with bounded drift. Nodes compute logical clock values based on their hardware clocks and message exchanges, and the goal is to synchronize the nodes' logical clocks as closely as possible, while satisfying certain validity conditions. The new feature of gradient clock synchronization GCS for short) is to require that the skew between any two nodesy' logical clocks be bounded by a nondecreasing function of the uncertainty in message delay (call this the distance) between the two nodes, and other network parameters. That is, we require nearby nodes to be closely synchronized, and allow faraway nodes to be more loosely synchronized. We contrast GCS with traditional clock synchronization, and discuss several practical motivations for GCS, mostly arising in sensor and ad-hoc networks. Our main result is that the worst case clock skew between two nodes at distance d or less from each other is Ω(d + logDloglogD), where D is the diameter of the network. This means that clock synchronization is not a localproperty, in the sense that the clock skew between two nodes depends not only on the distance between the nodes, but also on the size of the network. Our lower bound implies, for example, that the TDMA protocol with a fixed slot granularity will fail as the network grows, even if the maximum degree of each node stays constant.
8022410E	This paper presents a synchronization protocol for real-time multimedia application in wireless networks. A multimedia stream is multicast from one to some mobile terminals (MTs). Source and receivers can both be mobile. The protocol allows MTs to receive a multicast stream without breaks in playback as MTs move from cell to cell. The scheme is general because we make no assumption about clocks synchronization and messages are not time-stamped. However, it is used in a network having bounded delays. Verifications show that synchronization properties are respected. Moreover, simulations show that the strategy of known locations reduces the handoff duration compared to the one of unknown locations and then preserves the synchronization.
5F021DDB	Optical networks are widely regarded as the ultimate solution to the bandwidth needs of future communication systems. With fiber-optic links deployed between nodes, the electronic devices at the switch nodes, rather than the transmission medium, limit the bandwidth of a network. In an optically-switched network, a photonic switch can control connection paths without optical-to-electrical (O-E) conversion of the signal, thereby avoiding speed and data-format restrictions im- posed by such conversions. Despite the recognized potential of optically-switched multiwavelength networks, however, their overall effectiveness remains hampered by problems related to signal impairment such as noise, crosstalk and dispersion ac- cumulating over a transparent path, and a finite number of wavelengths available limiting the network size. Moreover, the absence of O-E conversions prevents their application to certain areas, most notably, packet switches.
7DFBE219	Using active Techniques to measure networks, that is by injecting probe packets, has proved to be quite challenging for properties beyond simple end-to-end delay and loss. Some of the greatest difficulties have resulted from our inability to design techniques robust to multi-hop queueing effects. This difficulty is only compounded by the need to keep measurements non-intrusive, that is to minimally affect ongoing data flows. In this paper, we show that novel network primitives based on hop-dependent priority queueing are very effective in addressing these challenges. By enabling these primitives, network operators can perform a variety of active measurements accurately. Such measurement-friendliness results from many factors including ease of applying fundamentally single-hop methods, better measurement capabilities, and easier clock synchronization. Other advantages of our architecture include ease of deployment, simplicity, low overhead and generality, i.e., no constraints on scheduling policies for data packets. We also discuss the challenges faced, for example, in coping with small but unavoidable inaccuracies and with exposing the primitives to end-users.
7A92DF05	Synchronization and localization are critical challenges for the coherent functioning of a wireless network, which are conventionally solved independently. Recently, various estimators have been proposed for pairwise synchronization between immobile nodes, based on time stamp exchanges via two-way communication. In this paper, we consider a network of mobile nodes for which a novel joint time-range model is presented, treating both unsynchronized clocks and the pairwise distances as a polynomial functions of true time. For a pair of nodes, a least squares solution is proposed for estimating the pairwise range parameters between the nodes, in addition to estimating the clock offsets and clock skews. Extending these pairwise solutions to network-wide ranging and clock synchronization, we present a central data fusion based global least squares algorithm. A unique solution is nonexistent without a constraint on the cost function e.g., a clock reference node. Ergo, a constrained framework is proposed and a new Constrained Cramér-Rao Bound (CCRB) is derived for the joint time-range model. In addition, to alleviate the need for a single clock reference, various clock constraints are presented and their benefits are investigated using the proposed solutions. Simulations are conducted and the algorithms are shown to approach the theoretical limits.
7BDEF745	We describe a new fault-tolerant algorithm for solving a variant of Lamport's clock synchronization problem. The algorithm is designed for a system of distributed processes that communicate by sending messages. Each process has its own read-only physical clock whose drift rate from real time is very small. By adding a value to its physical clock time, the process obtaines its local time. The algorithm solves the problem of maintaining closely synchronized local times, assuming that processes' local times are closely synchronized initially. The algorithm is able to tolerate the failure of just under one-third of the participating processes. It maintains synchronization to within a small constant, whose magnitude depends upon the rate of clock drift, the message delivery time and its uncertainty, and the initial closeness of synchronization. We also give a characterization of how far the clocks drift from real time. Reintegration of a repaired process can be accomplished using a slight modification of the basic alborithm. A similar style algorithm can also be used to achieve synchronization initially.
178CABEE	In this paper, a novel clock synch algorithm for WSN based on Pairwise Broadcast (PB) is investigated. Within the proposed approach, a cluster based time synch topology is constructed by broadcast and two-way message exchange mechanism. In each cluster, several assistant Cluster Heads (CHs) are voted upon the neighborhood of member nodes, resulting in fine-gradient cluster segmentation. On the basis of the topology, an improved clock estimator with unknown fixed delay is addressed. Herein, we induce clock parameters by General Linear Model as well as the fixed delay by Maximum Likelihood Estimation. Moreover, the performance analysis of the estimator is carried out. The simulation results reveal that the proposed algorithm is prominent on synch overhead and that it achieves better performance in terms of synch accuracy.
78F80572	Intermittent connection of wireless links, caused by low duty-cycle radio operation, harsh working environment, movement of sensor nodes, etc., makes clock synchronization a challenging task. Prior synchronization approaches in wireless sensor networks (WSNs) typically require that nodes exchange time messages frequently with the reference clock, which is difficult in networks with low or intermittent connectivity. This poster presents RobSync, a robust design for clock synchronization in intermittent-connected wireless networks. Having recognized that clock skew is highly correlated to the voltage supply, we use the local voltage information as a reference for clock self-calibration, which helps reduce the frequency of time-stamp exchanges. To prevent a misuse of the voltage information, leading to error accumulation, a re-synchronization interval adjustment design is developed to make a trade-off between accuracy and energy consumption. We present the theory behind RobSync, and provide preliminary results by experiments to compare our approach and the recent approach.
77881AE4	We study the problem of clock synchronization in highly dynamic networks, where communication links can appear or disappear at any time. The nodes in the network are equipped with hardware clocks, but the rate of the hardware clocks can vary arbitrarily within specific bounds, and the estimates that nodes can obtain about the clock values of other nodes are inherently inaccurate. Our goal in this setting is to output a logical clock at each node, such that the logical clocks of any two nodes are not too far apart, and nodes that remain close to each other in the network for a long time are better synchronized than distant nodes. This property is called gradient clock synchronization.Gradient clock synchronization has been widely studied in the static setting. We show that the bounds for the static case also apply to our highly dynamic setting: if two nodes remain at distance d from each other for sufficiently long, it is possible to synchronize their clocks to within O(d log(D/d)), where D is the diameter of the network. This is known to be optimal for static networks, and since a static network is a special case of a dynamic network, it is optimal for dynamic networks as well. Furthermore, we show that our algorithm has optimal stabilization time: when a path of length d appears between two nodes, the time required until the skew between the two nodes is reduced to O(d log(D/d)) is O(D), which we prove is optimal.
7F0F7624	A clock synchronization scheme that strikes a balance between hardware and software solutions is proposed. The proposed scheme is a software algorithm that uses minimal additional hardware to achieve reasonably tight synchronization. Unlike other software solutions, the guaranteed worst-cast skews can be made insensitive to the maximum variation of message transit delay in the system. The scheme is particularly suitable for large partially connected distributed systems with topologies that support simple point-to-point broadcast algorithms. Examples of such topologies include the hypercube and the mesh interconnection structures.
79291B39	Circuit emulation service (CES) allows time-division multiplexing (TDM) services (T1/E1 and T3/E3 circuits) to be transparently extended across a packet network. With circuit emulation over IP, for instance, TDM data received from an external device at the edge of an IP network is converted to IP packets, sent through the IP network, passed out of the IP network to its destination, and reassembled into TDM bit stream. Clock synchronization is very important for CES. This paper presents a clock synchronization scheme based on a double exponential filtering technique and a linear process model. The linear process model is used to describe the behaviour of clock synchronization errors between a transmitter and a receiver. In the clock synchronization scheme, the transmitter periodically sends explicit time indications or timestamps to a receiver to enable the receiver to synchronize its local clock to the transmitter's clock. A phase-locked loop (PLL) at the receiver processes the transmitted timestamps to generate timing signal for the receiver. The PLL has a simple implementation and provides both fast responsiveness (i.e. fast acquisition of transmitter frequency at a receiver) and significant jitter reduction in the locked state. Copyright © 2006 John Wiley & Sons, Ltd.
7941F5FC	In large scale of WSNs (wireless sensor networks), a centralized algorithm is not suitable for WSNs. Distributed algorithm has the obvious advantage over traditional time synchronization algorithm. The paper proposes a distributed time synchronization algorithm for WSNs, called SNOWBALL effect time synchronization. In the algorithm, a node needs only to communicate with its neighbor node, synchronizing itself clock based on the neighbor nodes information. The algorithm is a continuous synchronization process. The network will reach balance and clock consistency after repeated algorithm iterations. In the algorithm, we achieve network energy optimization by reducing unnecessary message exchange.
7CE46771	We present a simple, efficient, and unified solution to the problems of synchronizing, initializing, and integrating clocks for systems with different types of failures: crash, omission, and arbitrary failures with and without message authentication. This is the first known solution that achieves optimal accuracy—the accuracy of synchronized clocks (with respect to real time) is as good as that specified for the underlying hardware clocks. The solution is also optimal with respect to the number of faulty processes that can be tolerated to achieve this accuracy.
7FD2FE79	We show that CSMA is able to spontaneously synchronize transmissions in a wireless network with constant-size packets, and that this property can be used to devise efficient synchronized CSMA scheduling mechanisms without message passing. Using tools from queuing theory, we prove that for any connected wireless networks with arbitrary interference constraints, it is possible to implement self-synchronizing TDMA schedules without any explicit message passing or clock synchronization besides transmitting the original data packets, and the interaction can be fully local in that each node decides when to transmit next only by overhearing its neighbors' transmissions. We also provide a necessary and sufficient condition on the emergence of self-synchronization for a given TDMA schedule, and prove that such conditions for self-synchronization can be checked in a finite number of steps for a finite network topology.
7F7D7BBD	The development of tiny, low-cost, low-power and multifunctional sensor nodes equipped with sensing, data processing, and communicating components, have been made possible by the recent advances in micro-electro-mechanical systems (MEMS) technology. Wireless sensor networks (WSNs) assume a collection of such tiny sensing devices connected wirelessly and which are used to observe and monitor a variety of phenomena in the real physical world. Many applications based on these WSNs assume local clocks at each sensor node that need to be synchronized to a common notion of time. This paper reviews the existing clock synchronization protocols for WSNs and the methods of estimating clock offset and clock skew in the most representative clock synchronization protocols for WSNs.
756A3BB8	The problem of achieving optimal clock synchronization in a communication network with arbitrary topology and perfect clocks (that do not drift) is studied. Clock synchronization algorithms are presented for a large family of delay assumptions. Our algorithms are modular and consist of three major components. The first component holds for any type of delay assumptions; the second component holds for a large, natural family of local delay assumptions; the third component must be tailored for each specific delay assumption.Optimal clock synchronization algorithms are derived for several types of delay assumptions by appropriately tuning the third component. The delay assumptions include lower and upper delay bounds, no bounds at all, and bounds on the difference of the delay in opposite directions. In addition, our model handles systems where some processors are connected by broadcast networks in which every message arrives at all the processors at approximately the same time. A composition theorem allows combinations of different assumptions for different links or even for the same link; such mixtures are common in practice.Our results achieve the best possible precision in each execution. This notion of optimality is stronger than the more common notion of worst-case optimality. The new notion of optimality applies to systems where the worst-case behavior of any clock synchronization algorithm is inherently unbounded. 
7868EEE7	This paper describes an experiment designed to evaluate the accuracy of one-way clock synchronization using geostationary satellites with the propagation delays calculated from the satellite's orbital elements. Propagation delays from a ground transmitter via satellite to each of five locations in the North and South American continents were measured and compared with the calculated values. Three months of data are presented along with descriptions of the equipment, timing signal format, and methods for delay calculation and time recovery. The results show that within two weeks of epoch for the orbital elements, clocks can be synchronized to 150 ??s using the Tactical Communications Satellite (TACSAT). If one of the observers of the timing signals was already synchronized to the master clock, his delay measurement could improve the results for TACSAT to 75 ??s. By the same method and within 12 hours of epoch, the results for the Lincoln Experimental Satellite-6 (LES-6) indicated that synchronization to 25 ??s was possible.
76E618BA	We present a novel clock synchronization algorithm and prove tight upper and lower bounds on the worst-case clock skew that may occur between any two participants in any given distributed system. More importantly, the worst-case clock skew between neighboring nodes is (asymptotically) at most a factor of two larger than the best possible bound. While previous results solely focused on the dependency of the skew bounds on the network diameter, we prove that our techniques are optimal also with respect to the maximum clock drift, the uncertainty in message delays, and the imposed bounds on the clock rates. The presented results all hold in a general model where both the clock drifts and the message delays may vary arbitrarily within pre-specified bounds.Furthermore, our algorithm exhibits a number of other highly desirable properties. First, the algorithm ensures that the clock values remain in an affine linear envelope of real time. A better worst-case bound on the accuracy with respect to real time cannot be achieved in the absence of an external timer. Second, the algorithm minimizes the number and size of messages that need to be exchanged in a given time period. Moreover, only a small number of bits must be stored locally for each neighbor. Finally, our algorithm can easily be adapted for a variety of other prominent synchronization models.
63A0B5A5	We consider the problem of clock synchronization in a wireless setting where processors must minimize the number of times their radios are used to save energy. Energy efficiency is a central goal in wireless networks, especially if energy resources are severely limited, as occurs in sensor and ad hoc networks, and in many other settings. The problem of clock synchronization is fundamental and intensively studied in the field of distributed algorithms. In the current setting, the problem is to synchronize clocks of m processors that wake up in arbitrary time points, such that the maximum difference between wake-up times is bounded by a positive integer n. (Time intervals are appropriately discretized to allow communication of all processors that are awake in the same discrete time unit.) Currently, the best-known results for synchronization for single-hop networks of m processors is a randomized algorithm due to Bradonjic et al. [2009] of O(√n/m ⋅ poly-log(n)) radio use times per processor, and a lower bound of Ω (√n/m). The main open question left in their work is to close the poly-log gap between the upper and the lower bound, and to derandomize their probabilistic construction and eliminate error probability. This is exactly what we do in this article. That is, we show a deterministic algorithm with radio use of Θ (√n/m), which exactly matches the lower bound proven in Bradonjic et al. [2009] to a small multiplicative constant. Therefore, our algorithm is optimal in terms of energy efficiency and completely resolves a long sequence of works in this area [Bradonjic et al. 2009; Moscribroda et al. 2006; McGlynn and Borbash 2001; Polastre et al. 2004]. Moreover, our algorithm is optimal in terms of running time as well. To achieve these results, we devise a novel adaptive technique that determines the times when devices power their radios on and off. This technique may be of independent interest.In addition, we prove several lower bounds on the energy efficiency of algorithms for multihop networks. Specifically, we show that any algorithm for multihop networks must have radio use of Ω (√n) per processor. Our lower bounds hold even for specific kinds of networks, such as networks modeled by unit disk graphs and highly connected graphs. Our results imply that the simple deterministic algorithm devised for two-processor networks in Bradonjic et al. [2009] with efficiency O(√n) can be used in multihop networks, and it is the most efficient solution in terms of energy use.
78DA4353	It is known that clock synchronization can be achieved in the presence of faulty processors as long as the nonfaulty processors are connected, provided that some authentication technique is used. Without authentication the number of faults that can be tolerated has been an open question. Here we show that if we restrict logical clocks to running within some linear functions of real time, then clock synchronization is impossible without authentication when one-third or more of the processors are faulty. We also provide a lower bound on the closeness to which simultaneity can be achieved in the network as a function of the transmission and processing delay properties of the network.
7641A8AA	We consider the problem of synchronizing the clocks of processors in a failure-free distributed system when the hardware clocks do not drift but there is uncertainty in the message delays. Our goal is to develop closed form expressions for how closely the clocks can be synchronized. For an arbitrary undirected topology with arbitrary (symmetric) uncertainties, we prove a lower bound of diam/2 on the closeness of synchronization achievable, where diam is the diameter of the graph when the edges are weighted with the uncertainties. We then consider the class of topologies described as k-ary m-cubes, both with and without wrap-around. We assume that every edge has the same uncertainty, u. For the k-ary m-cube without wrap-around, we show that our lower bound diam/2 = um(k-1)/2 is tight, by analyzing the synchronization achieved by a simple algorithm. Since chains, meshes, and hypercubes are special cases of this topology, we have tight bounds for them. For the k-ary m-cube with wrap-around, we show using the same algorithm that our lower bound diam/2 = u*m*floor(k/2)/2 is tight when k is even and is almost tight when k is odd. This result implies tight or almost tight bounds for rings and tori. 